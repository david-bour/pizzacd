version: '3.5'

services:
    database:
        container_name: database
        image: postgres:11
        environment:
            - POSTGRES_PASSWORD=postgres
        ports:
            - 5432:5432
        networks:
            - backend

    client:
        container_name: client
        build:
            context: ./client
            dockerfile: Dockerfile
            target: build
        command: yarn dev-start
        volumes:
            - ./client:/home/node/client
            - /home/node/client/node_modules
        ports:
            - 4200:4200
        networks:
            - frontend

    appserver:
        container_name: appserver
        command: ['bin/wait-for-postgres.sh', 'bin/startup.sh']
        depends_on:
            - database
        build: ./appserver
        ports:
            - 5000:5000
        environment:
            - FLASK_APP=pizza
            - FLASK_APP_CONFIG=Development
            - FLASK_ENV=development
            - POSTGRES_HOST=database
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
            - POSTGRES_PORT=5432
        volumes:
            - ./appserver:/home/pizza
        networks:
            - frontend
            - backend

    nginx:
        container_name: nginx
        build:
            context: ./client
            dockerfile: Dockerfile
            target: webserver
        ports:
            - 80:80
        depends_on:
            - appserver
        networks:
            - frontend


networks:
    backend:
    frontend: